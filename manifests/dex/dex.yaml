---
apiVersion: v1
kind: Namespace
metadata:
  name: dex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex # This is created below
      containers:
        - image: dexidp/dex:v2.30.0
          name: dex
          command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]

          ports:
            - name: https
              containerPort: 5556

          volumeMounts:
            - name: config
              mountPath: /etc/dex/cfg
#            - name: tls
#              mountPath: /etc/dex/tls
#            - name: ca
#              mountPath: /etc/ssl/certs/
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5556
              scheme: HTTP
      volumes:
        - name: config
          configMap:
            name: dex
            items:
              - key: config.yaml
                path: config.yaml
#        - name: tls
#          secret:
#            secretName: dex.aiscope.io.tls
#        - name: ca
#          secret:
#            secretName: dex.aiscope.io.ca
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  namespace: dex
data:
  config.yaml: |
    issuer: http://dex.aiscope.io:32000
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
      # tlsCert: /etc/dex/tls/tls.crt
      # tlsKey: /etc/dex/tls/tls.key
    connectors:
    - type: ldap
      id: ldap
      name: "LDAP"
      config:
        host: openldap.ldap
        startTLS: false
        insecureNoSSL: true
        insecureSkipVerify: true
        bindDN: cn=admin,dc=aiscope,dc=io
        bindPW: admin

        usernamePrompt: Email Address

        userSearch:
          baseDN: ou=Users,dc=aiscope,dc=io
          filter: "(objectClass=person)"
          username: mail
          # "DN" (case sensitive) is a special attribute name. It indicates that
          # this value should be taken from the entity's DN not an attribute on
          # the entity.
          idAttr: DN
          emailAttr: mail
          nameAttr: cn

        groupSearch:
          baseDN: ou=Groups,dc=aiscope,dc=io
          filter: "(objectClass=groupOfNames)"

        userMatchers:
          # A user is a member of a group when their DN matches
          # the value of a "member" attribute on the group entity.
          - userAttr: DN
            groupAttr: member

        # The group name should be the "cn" value.
        nameAttr: cn
    oauth2:
      skipApprovalScreen: true

    staticClients:
    - id: aiscope
      redirectURIs:
      - 'http://api.aiscope.io:9090/oauth/callback/dex'
      name: 'aiscope'
      secret: ZXhhbXBsZS1hcHAtc2VjcmV0

    enablePasswordDB: true
    staticPasswords:
    - email: "admin@aiscope.io"
      # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
      hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  type: NodePort
  ports:
    - name: dex
      port: 5556
      protocol: TCP
      targetPort: 5556
      nodePort: 32000
  selector:
    app: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
  - apiGroups: ["dex.coreos.com"] # API group created by dex
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["*"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
  - kind: ServiceAccount
    name: dex           # Service account assigned to the dex pod, created above
    namespace: dex  # The namespace dex is running in
